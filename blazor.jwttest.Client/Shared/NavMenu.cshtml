@using blazor.jwttest.Client.Classes
@inject ApplicationState AppState

<div class="top-row pl-4 navbar navbar-dark">
  <a class="navbar-brand" href="">blazor.jwttest</a>
  <button class="navbar-toggler" onclick=@ToggleNavMenu>
    <span class="navbar-toggler-icon"></span>
  </button>
</div>

<div class=@(collapseNavMenu ? "collapse" : null) onclick=@ToggleNavMenu>
  <ul class="nav flex-column">
    <li class="nav-item px-3">
      <NavLink class="nav-link" href="" Match=NavLinkMatch.All>
        <span class="oi oi-home" aria-hidden="true"></span> Home
      </NavLink>
    </li>
    @if (AppState.IsLoggedIn)
    {
      <li class="nav-item px-3">
        <NavLink class="nav-link" href="edit/todos">
          <span class="oi oi-list-rich" aria-hidden="true"></span> Edit Todos
        </NavLink>
      </li>
    <li class="nav-item px-3">
      <NavLink class="nav-link" href="edit/users">
        <span class="oi oi-person" aria-hidden="true"></span> Edit Users
      </NavLink>
    </li>
    }
  </ul>

  @if(AppState.IsLoggedIn)
  {
  <div class="text-white">
    <p>Full Name : <span class="text-info">@AppState.FullName</span></p>
    <p>Email : <span class="text-info">@AppState.Email</span></p>
    <p>Login Name : <span class="text-info">@AppState.UserName</span></p>
    <p>Roles : 
      <ul>
        @foreach(var role in AppState.UserRoles)
        {
          <li class="text-info">@role</li>
        }
      </ul>
    </p>
  </div>
  }

</div>

@functions {

  bool collapseNavMenu = true;

  protected override void OnInit()
  {
    AppState.LoginSucceeded += UpdateState;
    AppState.LogoutSucceeded += UpdateState;
    base.OnInit();
  }

  void ToggleNavMenu()
  {
    collapseNavMenu = !collapseNavMenu;
  }

  private void UpdateState(object sender, string unused)
  {
    StateHasChanged();
  }

}
