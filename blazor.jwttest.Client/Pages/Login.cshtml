@using Microsoft.AspNetCore.Blazor.Services
@using blazor.jwttest.Client.Classes
@using blazor.jwttest.Shared
@using System.Threading;

@inject IUriHelper UriHelper
@inject ApplicationState  _appState

@page "/login"

<div class="container">

  <div class="row pt-4 pb-4">
    <div class="col-md-8 offset-md-2">
      <h2 class="text-center">Please enter your user name and password</h2>
    </div>
  </div>

  <div class="row">
    <div class="col-md-4 offset-md-4">
      <div class="editor">

        <input type="text" bind=@LoginDetails.Username placeholder="Username" class="form-control mb-2" />
        <input type="password" bind=@LoginDetails.Password placeholder="Password" class="form-control mb-2" />
        <button class="btn btn-primary" onclick="@LoginToApplication">Login</button>

      </div>
    </div>
  </div>

</div>

<PopupDialog Show="@ShowLoginFailed">
  <div class="alert alert-danger" role="alert">
    <h4 class="alert-heading">Login Attempt Failed</h4>
    <p>The password and/or username you supplied for login where not accepted.</p>
    <p>Please ensure you used the correct details to authenticate with the application</p>
    <hr>
    <p class="mb-0">If your credentials continue to fail please contact support for assistance.</p>
  </div>
</PopupDialog>

@functions {

  protected LoginDetails LoginDetails { get; set; } = new LoginDetails();
  protected bool ShowLoginFailed { get; set; }

  private bool showPopup { get; set; } = false;
  private Timer _timer;


  protected async Task LoginToApplication()
  {
    await _appState.Login(LoginDetails);

    if (_appState.IsLoggedIn)
    {
      UriHelper.NavigateTo("/");
    }
    else
    {
      ShowLoginFailed = true;
      _timer = new Timer(TimerCallBack, null, 5000, Timeout.Infinite);
    }
  }

  void TimerCallBack(object state)
  {
    ShowLoginFailed = false;
    StateHasChanged();
  }

}
