@using Microsoft.AspNetCore.Blazor.Services
@using blazor.jwttest.Shared
@using blazor.jwttest.Client.Classes

@inject HttpClient Http
@inject IUriHelper UriHelper
@inject ApplicationState  AppState

@page "/edit/users"

<h1>Edit Users's</h1>

@if (users == null)
{
  <p><em>Loading list...</em></p>
}
else
{
  <td><a href="/add/user" class="btn btn-success">Add New User</a></td><br />
  <table class="table">
    <thead>
      <tr>
        <th>#</th>
        <th>Name</th>
        <th>&nbsp;</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var user in users)
      {
        <tr>
          <td>@user.Id</td>
          <td>@user.LoginName</td>
          <td>
            <a href="/edit/user/@user.Id" class="btn btn-sm btn-primary">Edit User</a>
            <a href="/delete/user/@user.Id" class="btn btn-sm btn-danger">Delete User</a>
          </td>
        </tr>
      }
    </tbody>
  </table>
}

@functions {

  User[] users;

  private readonly List<string> allowedRoles = new List<string>() { "useredit", "admin" };
  NavigationFailReason failReason = NavigationFailReason.Unknown;

  protected override async Task OnInitAsync()
  {
    if (!AppState.IsAllowedToNavigate(allowedRoles, out failReason, "/login"))
    {
      if (failReason == NavigationFailReason.RoleNotAllowed)
      {
        UriHelper.NavigateTo("/error403");
        return;
      }
    }

    // If we get here we're allowed to access this page
    users = await Http.GetJsonAsync<User[]>("api/users/all");
  }

}

